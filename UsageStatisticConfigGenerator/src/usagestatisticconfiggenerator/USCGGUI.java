/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * USCGGUI.java
 *
 * Created on 2011-11-02, 20:06:30
 */
package usagestatisticconfiggenerator;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Vi
 */
public class USCGGUI extends javax.swing.JFrame {

    private CipherAES cipher;
    /** Creates new form USCGGUI */
    public USCGGUI() {
        initComponents();
        try {
            cipher = new CipherAES();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        serverURL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tool = new javax.swing.JTextField();
        debug = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Usage Statistic - Config File Generator");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        jLabel1.setText("USAGE STATISTICS");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24));
        jLabel2.setText("Config File Generator");

        jLabel3.setText(" server URL");

        jLabel4.setText(" user name");

        jLabel5.setText(" password");

        jLabel6.setText(" tool name");

        debug.setText("debug mode");
        debug.setToolTipText("");
        debug.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        debug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugActionPerformed(evt);
            }
        });

        jButton1.setText("Save Config File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(user, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(serverURL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(tool, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)))
                                .addComponent(debug, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(debug)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void debugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_debugActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
                saveFile();
        } catch (IOException ex) {
            Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private boolean fieldsAreCorrect(){
        if(serverURL.getText().equals("") || user.getText().equals("") || password.getText().equals("") || tool.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Empty fields are not allowed", "Config Error", 0);
            return false;
        }
        try {
            new URI(serverURL.getText());
        } catch (URISyntaxException ex) {
            JOptionPane.showMessageDialog(this, "URL is not valid", "Config Error", 0);
            return false;
        }
        
        return true;
    }
    
    private String getConfig(){
        String url = serverURL.getText();
        url=url.contains("http://")?url:"http://"+url;
        return "serverURL= "+url+"\nuser=  "+user.getText()+"\npassword= "+CipherAES.sha256(password.getText())+"\ntool= "+tool.getText()+"\ndebug= "+(debug.isSelected()?"on":"off");
    }
    
    private void saveFile() throws IOException{
        if(fieldsAreCorrect()){
            File f = fileDialog(true);
            if(f!=null){
                String config = this.getConfig();
                File fil = new File(f.getAbsolutePath()+(!f.getAbsolutePath().contains(".cfg")?".cfg":""));
                try {
                    cipher.writeCiphered(fil, config);
                    
                } catch (InvalidKeyException ex) {
                    Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidAlgorithmParameterException ex) {
                    Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    private void openFile(){
        File f = fileDialog(false);
        if(f!=null){
            String config="";
            try {
                config = cipher.readCiphered(f);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidAlgorithmParameterException ex) {
                Logger.getLogger(USCGGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            validateAndSetConfig(config);
        }
        
    }
    
    private File fileDialog(boolean save){
        JFileChooser fileChooser = new JFileChooser();
        if(save){
            fileChooser.setDialogTitle("Zapisz plik konfiguracyjny");
        }
        else{
            fileChooser.setDialogTitle("Otwórz plik konfiguracyjny");
        }
        fileChooser.setFileFilter(new FileNameExtensionFilter("Usage Statistic Config Files (cfg)", "cfg"));
        fileChooser.setSelectedFile(new File("client-config"));

        int returnValue = save?fileChooser.showSaveDialog(null):fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
          return fileChooser.getSelectedFile();
        }
        return null;
        
    }
    
    private void validateAndSetConfig(String config){
        StringTokenizer st = new StringTokenizer(config);
        String url=null, us=null, pass=null, too=null, deb=null;
        if(st.nextToken().equals("serverURL=") && st.hasMoreTokens()){
            url=st.nextToken();
        
            if(st.nextToken().equals("user=") && st.hasMoreTokens()){
                us=st.nextToken();
            
                if(st.nextToken().equals("password=") && st.hasMoreTokens()){
                    pass=st.nextToken();
                    
                    if(st.nextToken().equals("tool=") && st.hasMoreTokens()){
                        too=st.nextToken();
                        
                        if(st.nextToken().equals("debug=") && st.hasMoreTokens()){
                            deb=st.nextToken();
                        }
                    }
                }
            }
        }
        if(url!=null && us!=null && pass!=null && too!=null && deb!=null){
            serverURL.setText(url);
            user.setText(us);
            password.setText(pass);
            tool.setText(too);
            debug.setSelected(deb.equals("on"));
        }
        else{
            JOptionPane.showMessageDialog(this, "File Corrupted", "Config Error", 0);
        }
        
    }
    
    public static void main(String[] args) {
        try {
            //UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");//com.sun.java.swing.plaf.gtk.GTKLookAndFeel");//"javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (ClassNotFoundException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            //Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        new USCGGUI().setVisible(true);        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox debug;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField password;
    private javax.swing.JTextField serverURL;
    private javax.swing.JTextField tool;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
